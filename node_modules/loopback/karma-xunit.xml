<?xml version="1.0"?>
<testsuites>
  <testsuite name="PhantomJS 1.9.8 (Mac OS X 0.0.0)" package="" timestamp="2016-02-04T15:29:07" id="0" hostname="kompx.local" tests="240" errors="0" failures="0" time="1.594">
    <properties>
      <property name="browser.fullName" value="Mozilla/5.0 (Macintosh; PPC Mac OS X) AppleWebKit/534.34 (KHTML, like Gecko) PhantomJS/1.9.8 Safari/534.34"/>
    </properties>
    <testcase name="ValidationError" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback exports"/>
    <testcase name="includes `faviconFile`" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback exports">
      <skipped/>
    </testcase>
    <testcase name="has `getCurrentContext` method" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback exports">
      <skipped/>
    </testcase>
    <testcase name="exports all expected properties" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback exports">
      <skipped/>
    </testcase>
    <testcase name="supports localRegistry:true" time="0.002" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback(options)"/>
    <testcase name="does not load builtin models into the local registry" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback(options)"/>
    <testcase name="supports loadBuiltinModels:true" time="0.011" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback(options)"/>
    <testcase name="Create a data source with a connector." time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback_createDataSource(options)"/>
    <testcase name="should create model extending Model by default" time="0.01" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback data source created by loopback"/>
    <testcase name="should extend from Model by default" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback model created by loopback"/>
    <testcase name="doesn&apos;t overwrite model with datasource configured" time="0.006" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback_autoAttach"/>
    <testcase name="Setup a remote method." time="0.003" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback_remoteMethod(Model, fn, [options]);"/>
    <testcase name="configures remote methods" time="0.002" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback_createModel(name, properties, options)"/>
    <testcase name="should extend from options.base" time="0.002" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback_createModel(name, properties, options) options_base"/>
    <testcase name="should be able to get model by name" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback_createModel(name, properties, options) loopback_getModel and getModelByType"/>
    <testcase name="should be able to get model by type" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback_createModel(name, properties, options) loopback_getModel and getModelByType"/>
    <testcase name="should throw when the model does not exist" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback_createModel(name, properties, options) loopback_getModel and getModelByType"/>
    <testcase name="creates the model" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback_createModel(config)"/>
    <testcase name="interprets extra first-level keys as options" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback_createModel(config)"/>
    <testcase name="prefers config.options.key over config.key" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback_createModel(config)"/>
    <testcase name="adds new relations" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback_configureModel(ModelCtor, config)"/>
    <testcase name="updates existing relations" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback_configureModel(ModelCtor, config)"/>
    <testcase name="updates relations before attaching to a dataSource" time="0.002" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback_configureModel(ModelCtor, config)"/>
    <testcase name="adds new acls" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback_configureModel(ModelCtor, config)"/>
    <testcase name="updates existing acls" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback_configureModel(ModelCtor, config)"/>
    <testcase name="updates existing settings" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback_configureModel(ModelCtor, config)"/>
    <testcase name="configures remote methods" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback_configureModel(ModelCtor, config)"/>
    <testcase name="inherits properties from express" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback object"/>
    <testcase name="exports all built-in models" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback object"/>
    <testcase name="preserves callback domain" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback_getCurrentContext">
      <skipped/>
    </testcase>
    <testcase name="works outside REST middleware" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).loopback loopback_getCurrentContext">
      <skipped/>
    </testcase>
    <testcase name="Require a model to include a property to be considered valid" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Model / PersistedModel Model Tests Model_validatesPresenceOf(properties___)"/>
    <testcase name="Require a property length to be within a specified range" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Model / PersistedModel Model Tests Model_validatesLengthOf(property, options)"/>
    <testcase name="Require a value for `property` to be in the specified array" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Model / PersistedModel Model Tests Model_validatesInclusionOf(property, options)"/>
    <testcase name="Require a value for `property` to not exist in the specified array" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Model / PersistedModel Model Tests Model_validatesExclusionOf(property, options)"/>
    <testcase name="Require a value for `property` to be a specific type of `Number`" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Model / PersistedModel Model Tests Model_validatesNumericalityOf(property, options)"/>
    <testcase name="Validate the model instance" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Model / PersistedModel Model Tests myModel_isValid()"/>
    <testcase name="Asynchronously validate the model" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Model / PersistedModel Model Tests myModel_isValid()"/>
    <testcase name="Create an instance of Model with given data and save to the attached data source" time="0.016" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Model / PersistedModel Model Tests Model_create([data], [callback])"/>
    <testcase name="Save an instance of a Model to the attached data source" time="0.012" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Model / PersistedModel Model Tests model_save([options], [callback])"/>
    <testcase name="Save specified attributes to the attached data source" time="0.024" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Model / PersistedModel Model Tests model_updateAttributes(data, [callback])"/>
    <testcase name="Update when record with id=data.id found, insert otherwise" time="0.013" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Model / PersistedModel Model Tests Model_upsert(data, callback)"/>
    <testcase name="Remove a model from the attached data source" time="0.014" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Model / PersistedModel Model Tests model_destroy([callback])"/>
    <testcase name="Delete a model instance from the attached data source" time="0.015" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Model / PersistedModel Model Tests Model_deleteById(id, [callback])"/>
    <testcase name="Find an instance by id" time="0.012" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Model / PersistedModel Model Tests Model_findById(id, callback)"/>
    <testcase name="Query count of Model instances in data source" time="0.023" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Model / PersistedModel Model Tests Model_count([query], callback)"/>
    <testcase name="Ensure the value for `property` is unique" time="0.014" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Model / PersistedModel Model_validatesUniquenessOf(property, options)"/>
    <testcase name="Attach a model to a [DataSource](#data-source)" time="0.003" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Model / PersistedModel Model_attachTo(dataSource)"/>
    <testcase name="Delete all Model instances from data source" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_destroyAll(callback)">
      <skipped/>
    </testcase>
    <testcase name="Call the method using HTTP / REST" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Example Remote Method">
      <skipped/>
    </testcase>
    <testcase name="Converts null result of findById to 404 Not Found" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Example Remote Method">
      <skipped/>
    </testcase>
    <testcase name="Call the findById with filter.fields using HTTP / REST" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Example Remote Method">
      <skipped/>
    </testcase>
    <testcase name="Call the findById with filter.include using HTTP / REST" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Example Remote Method">
      <skipped/>
    </testcase>
    <testcase name="Run a function before a remote method is called by a client" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_beforeRemote(name, fn)">
      <skipped/>
    </testcase>
    <testcase name="Run a function after a remote method is called by a client" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_afterRemote(name, fn)">
      <skipped/>
    </testcase>
    <testcase name="runs the function when method fails" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_afterRemoteError(name, fn)">
      <skipped/>
    </testcase>
    <testcase name="The express ServerRequest object" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Remote Method invoking context ctx_req">
      <skipped/>
    </testcase>
    <testcase name="The express ServerResponse object" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Remote Method invoking context ctx_res">
      <skipped/>
    </testcase>
    <testcase name="Define a one to many relationship" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_hasMany(Model)">
      <skipped/>
    </testcase>
    <testcase name="Normalized properties passed in originally by loopback.createModel()" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_properties">
      <skipped/>
    </testcase>
    <testcase name="Create a new model by extending an existing model" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_extend()">
      <skipped/>
    </testcase>
    <testcase name="create isolated emitters for subclasses" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_extend() events">
      <skipped/>
    </testcase>
    <testcase name="should return WRITE" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_checkAccessTypeForMethod(remoteMethod) create">
      <skipped/>
    </testcase>
    <testcase name="should return WRITE" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_checkAccessTypeForMethod(remoteMethod) updateOrCreate">
      <skipped/>
    </testcase>
    <testcase name="should return WRITE" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_checkAccessTypeForMethod(remoteMethod) upsert">
      <skipped/>
    </testcase>
    <testcase name="should return READ" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_checkAccessTypeForMethod(remoteMethod) exists">
      <skipped/>
    </testcase>
    <testcase name="should return READ" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_checkAccessTypeForMethod(remoteMethod) findById">
      <skipped/>
    </testcase>
    <testcase name="should return READ" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_checkAccessTypeForMethod(remoteMethod) find">
      <skipped/>
    </testcase>
    <testcase name="should return READ" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_checkAccessTypeForMethod(remoteMethod) findOne">
      <skipped/>
    </testcase>
    <testcase name="should return WRITE" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_checkAccessTypeForMethod(remoteMethod) destroyById">
      <skipped/>
    </testcase>
    <testcase name="should return WRITE" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_checkAccessTypeForMethod(remoteMethod) deleteById">
      <skipped/>
    </testcase>
    <testcase name="should return WRITE" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_checkAccessTypeForMethod(remoteMethod) removeById">
      <skipped/>
    </testcase>
    <testcase name="should return READ" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_checkAccessTypeForMethod(remoteMethod) count">
      <skipped/>
    </testcase>
    <testcase name="should return EXECUTE" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_checkAccessTypeForMethod(remoteMethod) unkown-model-method">
      <skipped/>
    </testcase>
    <testcase name="Get the Change Model" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_getChangeModel()">
      <skipped/>
    </testcase>
    <testcase name="Get the Source Id" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_getSourceId(callback)">
      <skipped/>
    </testcase>
    <testcase name="Create a checkpoint" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_checkpoint(callback)">
      <skipped/>
    </testcase>
    <testcase name="should return the subclass of ACL" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model__getACLModel()">
      <skipped/>
    </testcase>
    <testcase name="includes all aliases" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods PersistedModel remote methods">
      <skipped/>
    </testcase>
    <testcase name="calls the callback when already attached" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_getApp(cb)">
      <skipped/>
    </testcase>
    <testcase name="calls the callback after attached" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Remote Methods Model_getApp(cb)">
      <skipped/>
    </testcase>
    <testcase name="Get the distance to another `GeoPoint`" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).GeoPoint geoPoint_distanceTo(geoPoint, options)"/>
    <testcase name="Get the distance between two points" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).GeoPoint GeoPoint_distanceBetween(a, b, options)"/>
    <testcase name="Create from string" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).GeoPoint GeoPoint()"/>
    <testcase name="Serialize as string" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).GeoPoint GeoPoint()"/>
    <testcase name="Create from array" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).GeoPoint GeoPoint()"/>
    <testcase name="Create as Model property" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).GeoPoint GeoPoint()"/>
    <testcase name="should call rectifyAllChanges if no id is passed for rectifyOnDelete" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs optimization check rectifyChange Vs rectifyAllChanges"/>
    <testcase name="should call rectifyAllChanges if no id is passed for rectifyOnSave" time="0.004" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs optimization check rectifyChange Vs rectifyAllChanges"/>
    <testcase name="rectifyOnDelete for Delete should call rectifyChange instead of rectifyAllChanges" time="0.009" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs optimization check rectifyChange Vs rectifyAllChanges"/>
    <testcase name="rectifyOnSave for Update should call rectifyChange instead of rectifyAllChanges" time="0.009" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs optimization check rectifyChange Vs rectifyAllChanges"/>
    <testcase name="rectifyOnSave for Create should call rectifyChange instead of rectifyAllChanges" time="0.008" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs optimization check rectifyChange Vs rectifyAllChanges"/>
    <testcase name="Get changes since the given checkpoint" time="0.034" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs Model_changes(since, filter, callback)"/>
    <testcase name="excludes changes from older checkpoints" time="0.01" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs Model_changes(since, filter, callback)"/>
    <testcase name="Replicate data using the target model" time="0.017" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs Model_replicate(since, targetModel, options, callback)"/>
    <testcase name="Replicate data using the target model - promise variant" time="0.041" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs Model_replicate(since, targetModel, options, callback)"/>
    <testcase name="applies &quot;since&quot; filter on source changes" time="0.021" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs Model_replicate(since, targetModel, options, callback)"/>
    <testcase name="applies &quot;since&quot; filter on source changes - promise variant" time="0.031" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs Model_replicate(since, targetModel, options, callback)"/>
    <testcase name="applies &quot;since&quot; filter on target changes" time="0.003" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs Model_replicate(since, targetModel, options, callback)"/>
    <testcase name="applies &quot;since&quot; filter on target changes - promise variant" time="0.017" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs Model_replicate(since, targetModel, options, callback)"/>
    <testcase name="uses different &quot;since&quot; value for source and target" time="0.008" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs Model_replicate(since, targetModel, options, callback)"/>
    <testcase name="uses different &quot;since&quot; value for source and target - promise variant" time="0.019" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs Model_replicate(since, targetModel, options, callback)"/>
    <testcase name="picks up changes made during replication" time="0.028" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs Model_replicate(since, targetModel, options, callback)"/>
    <testcase name="returns new current checkpoints to callback" time="0.011" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs Model_replicate(since, targetModel, options, callback)"/>
    <testcase name="leaves current target checkpoint empty" time="0.018" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs Model_replicate(since, targetModel, options, callback)"/>
    <testcase name="detects UPDATE made during UPDATE" time="0.037" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs Model_replicate(since, targetModel, options, callback) with 3rd-party changes"/>
    <testcase name="detects CREATE made during CREATE" time="0.02" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs Model_replicate(since, targetModel, options, callback) with 3rd-party changes"/>
    <testcase name="detects UPDATE made during DELETE" time="0.031" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs Model_replicate(since, targetModel, options, callback) with 3rd-party changes"/>
    <testcase name="handles DELETE made during DELETE" time="0.024" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs Model_replicate(since, targetModel, options, callback) with 3rd-party changes"/>
    <testcase name="should detect a single conflict" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs conflict detection - both updated"/>
    <testcase name="type should be UPDATE" time="0.002" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs conflict detection - both updated"/>
    <testcase name="conflict.changes()" time="0.003" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs conflict detection - both updated"/>
    <testcase name="conflict.models()" time="0.002" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs conflict detection - both updated"/>
    <testcase name="should detect a single conflict" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs conflict detection - source deleted"/>
    <testcase name="type should be DELETE" time="0.002" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs conflict detection - source deleted"/>
    <testcase name="conflict.changes()" time="0.003" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs conflict detection - source deleted"/>
    <testcase name="conflict.models()" time="0.006" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs conflict detection - source deleted"/>
    <testcase name="should detect a single conflict" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs conflict detection - target deleted"/>
    <testcase name="type should be DELETE" time="0.002" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs conflict detection - target deleted"/>
    <testcase name="conflict.changes()" time="0.003" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs conflict detection - target deleted"/>
    <testcase name="conflict.models()" time="0.003" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs conflict detection - target deleted"/>
    <testcase name="should not detect a conflict" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs conflict detection - both deleted"/>
    <testcase name="detects &quot;create&quot;" time="0.012" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs change detection"/>
    <testcase name="detects &quot;updateOrCreate&quot;" time="0.013" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs change detection"/>
    <testcase name="detects &quot;findOrCreate&quot;" time="0.029" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs change detection"/>
    <testcase name="detects &quot;deleteById&quot;" time="0.014" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs change detection"/>
    <testcase name="detects &quot;deleteAll&quot;" time="0.014" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs change detection"/>
    <testcase name="detects &quot;updateAll&quot;" time="0.013" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs change detection"/>
    <testcase name="detects &quot;prototype.save&quot;" time="0.014" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs change detection"/>
    <testcase name="detects &quot;prototype.updateAttributes&quot;" time="0.014" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs change detection"/>
    <testcase name="detects &quot;prototype.delete&quot;" time="0.013" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs change detection"/>
    <testcase name="correctly replicates without checkpoint filter" time="0.019" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs complex setup"/>
    <testcase name="replicates multiple updates within the same CP" time="0.017" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs complex setup"/>
    <testcase name="replicates new models" time="0.018" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs complex setup clientA-server-clientB"/>
    <testcase name="propagates updates with no false conflicts" time="0.056" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs complex setup clientA-server-clientB"/>
    <testcase name="propagates deletes with no false conflicts" time="0.023" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs complex setup clientA-server-clientB"/>
    <testcase name="propagates CREATE" time="0.012" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs complex setup clientA-server-clientB bidirectional sync"/>
    <testcase name="propagates CREATE+UPDATE" time="0.05" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs complex setup clientA-server-clientB bidirectional sync"/>
    <testcase name="propagates DELETE" time="0.022" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs complex setup clientA-server-clientB bidirectional sync"/>
    <testcase name="does not report false conflicts" time="0.055" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs complex setup clientA-server-clientB bidirectional sync"/>
    <testcase name="handles UPDATE conflict resolved using &quot;ours&quot;" time="0.071" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs complex setup clientA-server-clientB bidirectional sync"/>
    <testcase name="handles UPDATE conflict resolved using &quot;theirs&quot;" time="0.041" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs complex setup clientA-server-clientB bidirectional sync"/>
    <testcase name="handles UPDATE conflict resolved manually" time="0.052" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs complex setup clientA-server-clientB bidirectional sync"/>
    <testcase name="handles DELETE conflict resolved using &quot;ours&quot;" time="0.086" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs complex setup clientA-server-clientB bidirectional sync"/>
    <testcase name="handles DELETE conflict resolved using &quot;theirs&quot;" time="0.041" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs complex setup clientA-server-clientB bidirectional sync"/>
    <testcase name="handles DELETE conflict resolved as manual delete" time="0.038" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs complex setup clientA-server-clientB bidirectional sync"/>
    <testcase name="handles DELETE conflict resolved manually" time="0.073" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Replication / Change APIs complex setup clientA-server-clientB bidirectional sync"/>
    <testcase name="Shouldnt create two models if called twice" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Change Change_getCheckpointModel()"/>
    <testcase name="should be a hash of the modelName and modelId" time="0.002" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Change change_id"/>
    <testcase name="should create an entry" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Change Change_rectifyModelChanges(modelName, modelIds, callback) using an existing untracked model"/>
    <testcase name="should only create one change" time="0.002" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Change Change_rectifyModelChanges(modelName, modelIds, callback) using an existing untracked model"/>
    <testcase name="should create an entry" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Change Change_findOrCreateChange(modelName, modelId, callback) when a change doesnt exist"/>
    <testcase name="should find the entry" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Change Change_findOrCreateChange(modelName, modelId, callback) when a change does exist"/>
    <testcase name="should create a new change with the correct revision" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Change change_rectify(callback)"/>
    <testcase name="should merge updates within the same checkpoint" time="0.012" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Change change_rectify(callback)"/>
    <testcase name="should not change checkpoint when rev is the same" time="0.003" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Change change_rectify(callback)"/>
    <testcase name="should get the correct revision" time="0.013" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Change change_currentRevision(callback)"/>
    <testcase name="should hash the given string" time="0.002" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Change Change_hash(str)"/>
    <testcase name="should return the same revision for the same data" time="0.002" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Change Change_revisionForInst(inst)"/>
    <testcase name="CREATE" time="0.002" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Change change_type()"/>
    <testcase name="UPDATE" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Change change_type()"/>
    <testcase name="DELETE" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Change change_type()"/>
    <testcase name="UNKNOWN" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Change change_type()"/>
    <testcase name="should get the correct model class" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Change change_getModelCtor()"/>
    <testcase name="should return true when the change is equal" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Change change_equals(otherChange)"/>
    <testcase name="should return true when both changes are deletes" time="0.002" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Change change_equals(otherChange)"/>
    <testcase name="should return true when the change is based on the other" time="0.002" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Change change_isBasedOn(otherChange)"/>
    <testcase name="should return delta and conflict lists" time="0.002" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Change Change_diff(modelName, since, remoteChanges, callback)"/>
    <testcase name="should set &quot;prev&quot; to local revision in non-conflicting delta" time="0.005" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Change Change_diff(modelName, since, remoteChanges, callback)"/>
    <testcase name="should set &quot;prev&quot; to local revision in remote-only delta" time="0.003" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Change Change_diff(modelName, since, remoteChanges, callback)"/>
    <testcase name="should set &quot;prev&quot; to null for a new instance" time="0.003" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Change Change_diff(modelName, since, remoteChanges, callback)"/>
    <testcase name="returns the highest `seq` value" time="0.011" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Checkpoint bumpLastSeq() and current()"/>
    <testcase name="Should be no race condition for current() when calling in parallel" time="0.012" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Checkpoint bumpLastSeq() and current()"/>
    <testcase name="Should be no race condition for bumpLastSeq() when calling in parallel" time="0.013" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Checkpoint bumpLastSeq() and current()"/>
    <testcase name="Checkpoint.current() for non existing checkpoint should initialize checkpoint" time="0.012" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Checkpoint bumpLastSeq() and current()"/>
    <testcase name="bumpLastSeq() works when singleton instance does not exists yet" time="0.011" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).Checkpoint bumpLastSeq() and current()"/>
    <testcase name="exposes loopback as a property" time="0.005" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app"/>
    <testcase name="runs middleware in phases" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _middleware(phase, handler)">
      <skipped/>
    </testcase>
    <testcase name="preserves order of handlers in the same phase" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _middleware(phase, handler)">
      <skipped/>
    </testcase>
    <testcase name="supports `before:` and `after:` prefixes" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _middleware(phase, handler)">
      <skipped/>
    </testcase>
    <testcase name="allows extra handlers on express stack during app.use" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _middleware(phase, handler)">
      <skipped/>
    </testcase>
    <testcase name="allows handlers to be wrapped as __NR_handler on express stack" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _middleware(phase, handler)">
      <skipped/>
    </testcase>
    <testcase name="allows handlers to be wrapped as a property on express stack" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _middleware(phase, handler)">
      <skipped/>
    </testcase>
    <testcase name="injects error from previous phases into the router" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _middleware(phase, handler)">
      <skipped/>
    </testcase>
    <testcase name="passes unhandled error to callback" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _middleware(phase, handler)">
      <skipped/>
    </testcase>
    <testcase name="passes errors to error handlers in the same phase" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _middleware(phase, handler)">
      <skipped/>
    </testcase>
    <testcase name="scopes middleware to a string path" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _middleware(phase, handler)">
      <skipped/>
    </testcase>
    <testcase name="scopes middleware to a regex path" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _middleware(phase, handler)">
      <skipped/>
    </testcase>
    <testcase name="scopes middleware to a list of scopes" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _middleware(phase, handler)">
      <skipped/>
    </testcase>
    <testcase name="sets req.url to a sub-path" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _middleware(phase, handler)">
      <skipped/>
    </testcase>
    <testcase name="exposes express helpers on req and res objects" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _middleware(phase, handler)">
      <skipped/>
    </testcase>
    <testcase name="sets req.baseUrl and req.originalUrl" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _middleware(phase, handler)">
      <skipped/>
    </testcase>
    <testcase name="preserves correct order of routes vs. middleware" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _middleware(phase, handler)">
      <skipped/>
    </testcase>
    <testcase name="preserves order of middleware in the same phase" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _middleware(phase, handler)">
      <skipped/>
    </testcase>
    <testcase name="correctly mounts express apps" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _middleware(phase, handler)">
      <skipped/>
    </testcase>
    <testcase name="restores req &amp; res on return from mounted express app" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _middleware(phase, handler)">
      <skipped/>
    </testcase>
    <testcase name="provides API for loading middleware from JSON config" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _middlewareFromConfig">
      <skipped/>
    </testcase>
    <testcase name="scopes middleware to a list of scopes" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _middlewareFromConfig">
      <skipped/>
    </testcase>
    <testcase name="adds the phase just before `routes` by default" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _defineMiddlewarePhases(nameOrArray)">
      <skipped/>
    </testcase>
    <testcase name="merges phases adding to the start of the list" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _defineMiddlewarePhases(nameOrArray)">
      <skipped/>
    </testcase>
    <testcase name="merges phases preserving the order" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _defineMiddlewarePhases(nameOrArray)">
      <skipped/>
    </testcase>
    <testcase name="throws helpful error on ordering conflict" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app _defineMiddlewarePhases(nameOrArray)">
      <skipped/>
    </testcase>
    <testcase name="Expose a `Model` to remote clients" time="0.002" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_model(Model)"/>
    <testcase name="uses singlar name as app.remoteObjects() key" time="0.002" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_model(Model)"/>
    <testcase name="uses singular name as shared class name" time="0.002" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_model(Model)"/>
    <testcase name="registers existing models to app.models" time="0.002" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_model(Model)"/>
    <testcase name="emits a `modelRemoted` event" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_model(Model)"/>
    <testcase name="updates REST API when a new model is added" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_model(Model)">
      <skipped/>
    </testcase>
    <testcase name="accepts null dataSource" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_model(Model)"/>
    <testcase name="accepts false dataSource" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_model(Model)"/>
    <testcase name="should not require dataSource" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_model(Model)"/>
    <testcase name="Sugar for defining a fully built model" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_model(name, config)"/>
    <testcase name="interprets extra first-level keys as options" time="0.003" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_model(name, config)"/>
    <testcase name="prefers config.options.key over config.key" time="0.002" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_model(name, config)"/>
    <testcase name="honors config.public options" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_model(name, config)"/>
    <testcase name="defaults config.public to be true" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_model(name, config)"/>
    <testcase name="attaches the model to a datasource" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_model(ModelCtor, config)"/>
    <testcase name="is unique per app instance" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_models"/>
    <testcase name="is unique per app instance" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_dataSources"/>
    <testcase name="looks up the connector in `app.connectors`" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_dataSource"/>
    <testcase name="starts http server" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app listen()">
      <skipped/>
    </testcase>
    <testcase name="updates port on `listening` event" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app listen()">
      <skipped/>
    </testcase>
    <testcase name="updates `url` on `listening` event" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app listen()">
      <skipped/>
    </testcase>
    <testcase name="forwards to http.Server.listen on more than one arg" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app listen()">
      <skipped/>
    </testcase>
    <testcase name="forwards to http.Server.listen when the single arg is not a function" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app listen()">
      <skipped/>
    </testcase>
    <testcase name="uses app config when no parameter is supplied" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app listen()">
      <skipped/>
    </testcase>
    <testcase name="should set app.isAuthEnabled to true" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app enableAuth">
      <skipped/>
    </testcase>
    <testcase name="auto-configures required models to provided dataSource" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app enableAuth">
      <skipped/>
    </testcase>
    <testcase name="detects already configured subclass of a required model" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app enableAuth">
      <skipped/>
    </testcase>
    <testcase name="should return the status of the application" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_get(&apos;/&apos;, loopback_status())">
      <skipped/>
    </testcase>
    <testcase name="is unique per app instance" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_connectors"/>
    <testcase name="includes Remote connector" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_connectors"/>
    <testcase name="includes Memory connector" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_connectors"/>
    <testcase name="adds the connector to the registry" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_connector"/>
    <testcase name="adds a classified alias" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_connector"/>
    <testcase name="adds a camelized alias" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_connector"/>
    <testcase name="can be altered via `app.set(key, value)`" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_settings"/>
    <testcase name="can be read via `app.get(key)`" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_settings"/>
    <testcase name="is unique per app instance" time="0.001" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app app_settings"/>
    <testcase name="normalizes the http path" time="0" classname="PhantomJS 1.9.8 (Mac OS X 0.0.0).app normalizeHttpPath option">
      <skipped/>
    </testcase>
    <system-out><![CDATA[PhantomJS 1.9.8 (Mac OS X 0.0.0) WARN: 'Property `%s` cannot be reconfigured for `%s`', 'base', 'TestModel-23'
,PhantomJS 1.9.8 (Mac OS X 0.0.0) WARN: 'The configuration of `%s` is missing `dataSource` property.
Use `null` or `false` to mark models not attached to any data source.', 'MyTestModel'

]]></system-out>
    <system-err/>
  </testsuite>
</testsuites>
